CC=gcc
CXX=g++

INC_PATHS:=-Iaosdk -Igme-source -Ivio2sf -Ixz-embedded -Izlib
CFLAGS=-Wall -g -O0 $(INC_PATHS)
CXXFLAGS=-Wall -g -O0 $(INC_PATHS)

# necessary for AOSDK
CFLAGS+=-D__LITTLE_ENDIAN__

LDFLAGS=-lpulse-simple

TARGET=pulse-testbench

all: $(TARGET)

C_SOURCES=pulse-main.c \
        plugin-libgme.c \
        plugin-vio2sf.c \
        plugin-aosdk.c \
        xzdec.c \
        xz-embedded/xz_crc32.c \
        xz-embedded/xz_dec_lzma2.c \
        xz-embedded/xz_dec_stream.c \
        vio2sf/corlett.c \
        vio2sf/vio2sf.c \
        vio2sf/desmume/MMU.c \
        vio2sf/desmume/mc.c \
        vio2sf/desmume/thumb_instructions.c \
        vio2sf/desmume/cp15.c \
        vio2sf/desmume/FIFO.c \
        vio2sf/desmume/arm_instructions.c \
        vio2sf/desmume/GPU.c \
        vio2sf/desmume/SPU.c \
        vio2sf/desmume/armcpu.c \
        vio2sf/desmume/bios.c \
        vio2sf/desmume/matrix.c \
        vio2sf/desmume/NDSSystem.c \
        aosdk/corlett.c \
        aosdk/eng_dsf/eng_dsf.c \
        aosdk/eng_dsf/dc_hw.c \
        aosdk/eng_dsf/arm7.c \
        aosdk/eng_dsf/arm7i.c \
        aosdk/eng_dsf/aica.c \
        aosdk/eng_dsf/aicadsp.c \
        aosdk/eng_ssf/scspdsp.c \
        aosdk/eng_ssf/m68kopnz.c \
        aosdk/eng_ssf/m68kcpu.c \
        aosdk/eng_ssf/scsp.c \
        aosdk/eng_ssf/sat_hw.c \
        aosdk/eng_ssf/m68kops.c \
        aosdk/eng_ssf/m68kopac.c \
        aosdk/eng_ssf/eng_ssf.c \
        aosdk/eng_ssf/m68kopdm.c \
        aosdk/eng_psf/psx.c \
        aosdk/eng_psf/eng_psf2.c \
        aosdk/eng_psf/eng_psf.c \
        aosdk/eng_psf/eng_spu.c \
        aosdk/eng_psf/psx_hw.c \
        aosdk/eng_psf/peops2/spu.c \
        aosdk/eng_psf/peops2/dma.c \
        aosdk/eng_psf/peops2/registers.c \
        aosdk/eng_psf/peops/spu.c \
        zlib/adler32.c \
        zlib/crc32.c \
        zlib/infback.c \
        zlib/inffast.c \
        zlib/inflate.c \
        zlib/zutil.c \
	zlib/inftrees.c \
        zlib/uncompr.c

CXX_SOURCES:=gme-source/Ay_Apu.cpp \
        gme-source/Ay_Cpu.cpp \
        gme-source/Ay_Emu.cpp \
        gme-source/Blip_Buffer.cpp \
        gme-source/Classic_Emu.cpp \
        gme-source/Data_Reader.cpp \
        gme-source/Dual_Resampler.cpp \
        gme-source/Effects_Buffer.cpp \
        gme-source/Fir_Resampler.cpp \
        gme-source/Gb_Apu.cpp \
        gme-source/Gb_Cpu.cpp \
        gme-source/Gb_Oscs.cpp \
        gme-source/Gbs_Emu.cpp \
        gme-source/gme.cpp \
        gme-source/Gme_File.cpp \
        gme-source/Gym_Emu.cpp \
        gme-source/Hes_Apu.cpp \
        gme-source/Hes_Cpu.cpp \
        gme-source/Hes_Emu.cpp \
        gme-source/Kss_Cpu.cpp \
        gme-source/Kss_Emu.cpp \
        gme-source/Kss_Scc_Apu.cpp \
        gme-source/M3u_Playlist.cpp \
        gme-source/Multi_Buffer.cpp \
        gme-source/Music_Emu.cpp \
        gme-source/Nes_Apu.cpp \
        gme-source/Nes_Cpu.cpp \
        gme-source/Nes_Fme7_Apu.cpp \
        gme-source/Nes_Namco_Apu.cpp \
        gme-source/Nes_Oscs.cpp \
        gme-source/Nes_Vrc6_Apu.cpp \
        gme-source/Nsfe_Emu.cpp \
        gme-source/Nsf_Emu.cpp \
        gme-source/Sap_Apu.cpp \
        gme-source/Sap_Cpu.cpp \
        gme-source/Sap_Emu.cpp \
        gme-source/Sms_Apu.cpp \
        gme-source/Snes_Spc.cpp \
        gme-source/Spc_Cpu.cpp \
        gme-source/Spc_Dsp.cpp \
        gme-source/Spc_Emu.cpp \
        gme-source/Vgm_Emu.cpp \
        gme-source/Vgm_Emu_Impl.cpp \
        gme-source/Ym2413_Emu.cpp \
        gme-source/Ym2612_Emu.cpp

C_OBJECTS=$(patsubst %.c,%.o,$(C_SOURCES))
$(C_OBJECTS) : %.o : %.c
	$(CC) -o $@ -c $< $(CFLAGS)

CXX_OBJECTS=$(patsubst %.cpp,%.o,$(CXX_SOURCES))
$(CXX_OBJECTS) : %.o : %.cpp
	$(CXX) -o $@ -c $< $(CXXFLAGS)

$(TARGET): $(C_OBJECTS) $(CXX_OBJECTS)
	$(CXX) -o $@ $^ $(CFLAGS) $(LDFLAGS)

clean:
	rm -f $(TARGET) $(C_OBJECTS) $(CXX_OBJECTS)
